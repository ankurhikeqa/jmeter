<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan || Launch My Career" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="base_url_01" elementType="Argument">
            <stringProp name="Argument.name">base_url_01</stringProp>
            <stringProp name="Argument.value">qaapi.launchmycareer.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="base_url_02" elementType="Argument">
            <stringProp name="Argument.name">base_url_02</stringProp>
            <stringProp name="Argument.value">subscriptions.zoho.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loginUser" elementType="Argument">
            <stringProp name="Argument.name">loginUser</stringProp>
            <stringProp name="Argument.value">testuser1001@yopmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loginPassword" elementType="Argument">
            <stringProp name="Argument.name">loginPassword</stringProp>
            <stringProp name="Argument.value">Test@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="profilePin" elementType="Argument">
            <stringProp name="Argument.name">profilePin</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="childPin" elementType="Argument">
            <stringProp name="Argument.name">childPin</stringProp>
            <stringProp name="Argument.value">1111</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="animal_Id" elementType="Argument">
            <stringProp name="Argument.name">animal_Id</stringProp>
            <stringProp name="Argument.value">ISFJ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Career_SearchTerm" elementType="Argument">
            <stringProp name="Argument.name">Career_SearchTerm</stringProp>
            <stringProp name="Argument.value">Engineer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="THINK_TIME" elementType="Argument">
            <stringProp name="Argument.name">THINK_TIME</stringProp>
            <stringProp name="Argument.value">${__P(THINK_TIME,3000)}</stringProp>
            <stringProp name="Argument.desc">in ms</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMETER_USERS_COUNT" elementType="Argument">
            <stringProp name="Argument.name">JMETER_USERS_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(JMETER_USERS_COUNT,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMETER_RAMP_TIME" elementType="Argument">
            <stringProp name="Argument.name">JMETER_RAMP_TIME</stringProp>
            <stringProp name="Argument.value">${__P(JMETER_RAMP_TIME,5)}</stringProp>
            <stringProp name="Argument.desc">in seconds</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JMETER_THREAD_DURATION" elementType="Argument">
            <stringProp name="Argument.name">JMETER_THREAD_DURATION</stringProp>
            <stringProp name="Argument.value">${__P(JMETER_THREAD_DURATION,100)}</stringProp>
            <stringProp name="Argument.desc">in seconds</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Diagnostic" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${JMETER_USERS_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${JMETER_RAMP_TIME}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${JMETER_THREAD_DURATION}</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${loginUser}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">account/generate-verification-code</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion - Verify OTP success message" enabled="true">
            <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;message&apos;]</stringProp>
            <stringProp name="EXPECTED_VALUE">OTP has been sent your registered number.</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion - Success == true" enabled="true">
            <stringProp name="JSON_PATH">$[&apos;success&apos;]</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Authorization" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${loginUser}&quot;,&#xd;
	&quot;password&quot;: &quot;${loginPassword}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">account/auth</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;][&apos;credentials&apos;][&apos;AccessToken&apos;]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">authTokenNotFound</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion - Success == true" enabled="true">
            <stringProp name="JSON_PATH">$[&apos;success&apos;]</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Diagnostic || Flow No_1" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Step01 || Call Diagnostic Reusable File" enabled="true">
              <stringProp name="IncludeController.includepath">DiagnosticReusable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Diagnostic || Flow No_2" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Step01 || Call Diagnostic Reusable File" enabled="true">
              <stringProp name="IncludeController.includepath">DiagnosticReusable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step02 || Career || Get Suggester" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/getsuggester</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Suggester Title" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Suggester Title</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Counts == 784" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">784</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step03 || Diagnostic || Get User Animal" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">diagnostic/getuseranimal</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get User Animal" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get User Animal</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion - AnimalId" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;data&apos;][&apos;ANML_ID&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${animal_Id}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step04 || Career || Get Career Data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;shorting&quot;: &quot;&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Diagnostic || Flow No_3" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Step01 || Call Diagnostic Reusable File" enabled="true">
              <stringProp name="IncludeController.includepath">DiagnosticReusable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Favourite Career" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="property_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">CAREER</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">property_type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-favourite-career</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">fav_career ; total_fav</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_CODE&apos;] ; $[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0 ; 0</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">fav_careerNotFound ; total_fav_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="If user have any favourite career then first remove all favourite from the list" enabled="true">
              <stringProp name="WhileController.condition">${__javaScript(&quot;${total_fav}&quot; != &quot;0&quot;,)}</stringProp>
            </WhileController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Removing Favourite Career" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;property_id&quot;: &quot;${fav_career}&quot;,&#xd;
  &quot;property_type&quot;: &quot;CAREER&quot;,&#xd;
  &quot;action&quot;: &quot;delete&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">career/favourite-career-action</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="accept" elementType="Header">
                      <stringProp name="Header.name">accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="authorization" elementType="Header">
                      <stringProp name="Header.name">authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Favourite Career" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="property_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">CAREER</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">property_type</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">career/get-favourite-career</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="accept" elementType="Header">
                      <stringProp name="Header.name">accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="authorization" elementType="Header">
                      <stringProp name="Header.name">authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">fav_career ; total_fav</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_CODE&apos;] ; $[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">0 ; 0</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">fav_careerNotFound ; total_fav_NotFound</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step02 || Career || Get Career Data" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;shorting&quot;: &quot;&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - property_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">property_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_CODE&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">property_id_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step03 || Career || Adding Favourite Career Action" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;property_id&quot;: &quot;${property_id}&quot;,&#xd;
  &quot;property_type&quot;: &quot;CAREER&quot;,&#xd;
  &quot;action&quot;: &quot;add&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/favourite-career-action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Favourite career action" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Favourite career action</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Successful Message" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;message&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Career has been added to favourite</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step04 || Career || Verify Get Favourite Career" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="property_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">CAREER</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">property_type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-favourite-career</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get favourite career list" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get favourite career list</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Favourite Career Counts" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Favourite Items == Property ID" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_CODE&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${property_id}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step05 || Career || Removing Favourite Career Action" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;property_id&quot;: &quot;${property_id}&quot;,&#xd;
  &quot;property_type&quot;: &quot;CAREER&quot;,&#xd;
  &quot;action&quot;: &quot;delete&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/favourite-career-action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Favourite career action" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Favourite career action</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Removed Successful Message" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;message&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Career has been removed from favourite</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step06 || Career || Verify Get Favourite Career has been removed" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="property_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">CAREER</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">property_type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-favourite-career</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get favourite career list" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get favourite career list</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Favourite Career Counts" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">0</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Diagnostic || Flow No_4" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Step01 || Call Diagnostic Reusable File" enabled="true">
              <stringProp name="IncludeController.includepath">DiagnosticReusable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step02 || Career || Get Career Data || Sorting ASC || First Title" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;shorting&quot;: &quot;REGCAR_TITLE ASC&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">first_Title</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;][0][&apos;REGCAR_TITLE&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">first_Title_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step03 || Career || Get Career Data || Sorting ASC || Last Title" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 45,&#xd;
  &quot;shorting&quot;: &quot;REGCAR_TITLE ASC&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">last_Title</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;][7][&apos;REGCAR_TITLE&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">last_Title_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step04 || Career || Get Career Data || Sorting DESC || First Title of DESC == Last Title from ASC" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;shorting&quot;: &quot;REGCAR_TITLE DESC&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Verify Last Tittle from ASC is showinhg on First" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;data&apos;][0][&apos;REGCAR_TITLE&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${last_Title}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step05 || Career || Get Career Data || Sorting DESC || Last Title of DESC == First Title from ASC" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;${Career_SearchTerm}&quot;,&#xd;
  &quot;offset&quot;: 45,&#xd;
  &quot;shorting&quot;: &quot;REGCAR_TITLE DESC&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: false,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Search Count == 53" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">53</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Verify First Tittle from ASC is showinhg on Last" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;data&apos;][7][&apos;REGCAR_TITLE&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${first_Title}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Diagnostic || Flow No_5" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Step01 || Call Diagnostic Reusable File" enabled="true">
              <stringProp name="IncludeController.includepath">DiagnosticReusable.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step02 || Career || Get Career Data || Filter || Personality" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;searchterm&quot;: &quot;&quot;,&#xd;
  &quot;offset&quot;: 0,&#xd;
  &quot;shorting&quot;: &quot;REGCAR_TITLE ASC&quot;,&#xd;
  &quot;filteroptions&quot;: {&#xd;
    &quot;P&quot;: true,&#xd;
    &quot;S&quot;: false,&#xd;
    &quot;I&quot;: false,&#xd;
    &quot;H&quot;: false&#xd;
  },&#xd;
  &quot;size&quot;: 9,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;PERSONALITY&quot;: {&#xd;
      &quot;Animal&quot;: &quot;Koala&quot;,&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;I&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;S&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Learning&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
              &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
              &quot;value&quot;: &quot;Mathematics&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Science&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
              &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
              &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;F&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
              &quot;value&quot;: &quot;Persuasion&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Active Listening&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
              &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Speaking&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
              &quot;value&quot;: &quot;Negotiation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
              &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
              &quot;value&quot;: &quot;Coordination&quot;&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;Key&quot;: &quot;J&quot;,&#xd;
          &quot;Value&quot;: [&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
              &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
              &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
              &quot;value&quot;: &quot;Monitoring&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;SKILLS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Listening&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Speaking&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Reading Comprehension&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Problem Solving&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.a&quot;,&#xd;
            &quot;value&quot;: &quot;Critical Thinking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.C.4.a&quot;,&#xd;
            &quot;value&quot;: &quot;Mathematics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Science&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.2.i&quot;,&#xd;
            &quot;value&quot;: &quot;Complex Problem Solving&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.e&quot;,&#xd;
            &quot;value&quot;: &quot;Judgment and Decision Making&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Creativity&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Learning&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.c&quot;,&#xd;
            &quot;value&quot;: &quot;Learning Strategies&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Staying Positive&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Writing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.e&quot;,&#xd;
            &quot;value&quot;: &quot;Instructing&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Aiming High&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.g&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Analysis&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.4.h&quot;,&#xd;
            &quot;value&quot;: &quot;Systems Evaluation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Leadership&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.b&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Financial Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.c&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Material Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.2.d&quot;,&#xd;
            &quot;value&quot;: &quot;Monitoring&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.d&quot;,&#xd;
            &quot;value&quot;: &quot;Management of Personnel Resources&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.5.a&quot;,&#xd;
            &quot;value&quot;: &quot;Time Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Teamwork&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.c&quot;,&#xd;
            &quot;value&quot;: &quot;Persuasion&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Active Listening&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.a&quot;,&#xd;
            &quot;value&quot;: &quot;Social Perceptiveness&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.A.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Speaking&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.d&quot;,&#xd;
            &quot;value&quot;: &quot;Negotiation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.f&quot;,&#xd;
            &quot;value&quot;: &quot;Service Orientation&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;2.B.1.b&quot;,&#xd;
            &quot;value&quot;: &quot;Coordination&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;INTERESTS&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Business&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 18,&#xd;
            &quot;value&quot;: &quot;General Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 17,&#xd;
            &quot;value&quot;: &quot;Business Information Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 20,&#xd;
            &quot;value&quot;: &quot;Operations Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 21,&#xd;
            &quot;value&quot;: &quot;Administration and Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 16,&#xd;
            &quot;value&quot;: &quot;Administrative Support&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 19,&#xd;
            &quot;value&quot;: &quot;Human Resources Management&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Health, beauty and personal care&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 47,&#xd;
            &quot;value&quot;: &quot;Personal Care Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Healthcare&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 44,&#xd;
            &quot;value&quot;: &quot;Counseling &amp; Mental Health Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 36,&#xd;
            &quot;value&quot;: &quot;Diagnostic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 53,&#xd;
            &quot;value&quot;: &quot;Emergency and Fire Management Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 37,&#xd;
            &quot;value&quot;: &quot;Health Informatics&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 35,&#xd;
            &quot;value&quot;: &quot;Biotechnology Research and Development&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 38,&#xd;
            &quot;value&quot;: &quot;Support Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 39,&#xd;
            &quot;value&quot;: &quot;Therapeutic Services&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 46,&#xd;
            &quot;value&quot;: &quot;Family &amp; Community Services&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Marketing, advertising and sales&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 65,&#xd;
            &quot;value&quot;: &quot;Professional Sales&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 61,&#xd;
            &quot;value&quot;: &quot;Marketing Communications&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 62,&#xd;
            &quot;value&quot;: &quot;Marketing Management&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 63,&#xd;
            &quot;value&quot;: &quot;Marketing Research&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 64,&#xd;
            &quot;value&quot;: &quot;Merchandising&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Nature and natural resources&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 5,&#xd;
            &quot;value&quot;: &quot;Natural Resources Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Performing , working as an artist or producing&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 12,&#xd;
            &quot;value&quot;: &quot;Performing Arts&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: 15,&#xd;
            &quot;value&quot;: &quot;Visual Arts&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;Protecting the Environment&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 3,&#xd;
            &quot;value&quot;: &quot;Environmental Service Systems&quot;&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;The Armed Forces&quot;,&#xd;
        &quot;Value&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: 30,&#xd;
            &quot;value&quot;: &quot;National Security&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ],&#xd;
    &quot;HHH&quot;: [&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.2&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Head&quot;,&#xd;
          &quot;order&quot;: 1,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.2.a.1&quot;,&#xd;
            &quot;4.A.2.a.4&quot;,&#xd;
            &quot;4.A.2.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.3&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Hand&quot;,&#xd;
          &quot;order&quot;: 2,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.3.a.2&quot;,&#xd;
            &quot;4.A.3.b.2&quot;&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;Key&quot;: &quot;4.A.4&quot;,&#xd;
        &quot;Value&quot;: {&#xd;
          &quot;key&quot;: &quot;Heart&quot;,&#xd;
          &quot;order&quot;: 3,&#xd;
          &quot;value&quot;: [&#xd;
            &quot;4.A.4.a.4&quot;,&#xd;
            &quot;4.A.4.b.4&quot;&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/get-career-data</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Data from Cloud" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Data from Cloud</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Personality Search Count == 267" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">267</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">regcar_Slug</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_SLUG&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">regcar_Slug_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step03 || Career || Get Career Title || Select Career" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="REGCAR_SLUG" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${regcar_Slug}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">REGCAR_SLUG</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/getcareertitle</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Get Career Title" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Get Career Title</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Selected Career Count == 1" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;found&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">1</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  REGCAR SLUG" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_SLUG&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">${regcar_Slug}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor - property_id" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">selectedproperty_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$[&apos;detail&apos;][&apos;data&apos;]..[&apos;REGCAR_CODE&apos;]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">selectedproperty_id_NotFound</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step04|| Career || Adding Favourite Career Action" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;property_id&quot;: &quot;${selectedproperty_id}&quot;,&#xd;
  &quot;property_type&quot;: &quot;CAREER&quot;,&#xd;
  &quot;action&quot;: &quot;add&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/favourite-career-action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Favourite career action" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Favourite career action</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Successful Message" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;message&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Career has been added to favourite</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step05 || Career || Removing Favourite Career Action" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;property_id&quot;: &quot;${selectedproperty_id}&quot;,&#xd;
  &quot;property_type&quot;: &quot;CAREER&quot;,&#xd;
  &quot;action&quot;: &quot;delete&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${base_url_01}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">career/favourite-career-action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="accept" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${authToken}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  type = Success" enabled="true">
                <stringProp name="JSON_PATH">$.type</stringProp>
                <stringProp name="EXPECTED_VALUE">Success</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Title == Favourite career action" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;title&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Favourite career action</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion -  Removed Successful Message" enabled="true">
                <stringProp name="JSON_PATH">$[&apos;detail&apos;][&apos;message&apos;]</stringProp>
                <stringProp name="EXPECTED_VALUE">Career has been removed from favourite</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
